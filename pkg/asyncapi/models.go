package asyncapi

// This file is automatically generated, please do not edit.

const Version = "v0.0.2"

// AssetPayload represents a AssetPayload model.
type AssetPayload struct {
	Id          string
	Team        *Team
	Alias       string
	Rolfp       string
	Scannable   bool
	AssetType   *AssetType
	Identifier  string
	Annotations []interface{}
}

// Team represents a Team model.
type Team struct {
	Id          string
	Name        string
	Description string
	Tag         string
}

// AssetType represents an enum of AssetType.
type AssetType uint

const (
	AssetTypeIp AssetType = iota
	AssetTypeDomainName
	AssetTypeHostname
	AssetTypeAwsAccount
	AssetTypeIpRange
	AssetTypeDockerImage
	AssetTypeWebAddress
	AssetTypeGitRepository
	AssetTypeGcpProject
)

// Value returns the value of the enum.
func (op AssetType) Value() any {
	if op >= AssetType(len(AssetTypeValues)) {
		return nil
	}
	return AssetTypeValues[op]
}

var AssetTypeValues = []any{"IP", "DomainName", "Hostname", "AWSAccount", "IPRange", "DockerImage", "WebAddress", "GitRepository", "GCPProject"}
var ValuesToAssetType = map[any]AssetType{
	AssetTypeValues[AssetTypeIp]:            AssetTypeIp,
	AssetTypeValues[AssetTypeDomainName]:    AssetTypeDomainName,
	AssetTypeValues[AssetTypeHostname]:      AssetTypeHostname,
	AssetTypeValues[AssetTypeAwsAccount]:    AssetTypeAwsAccount,
	AssetTypeValues[AssetTypeIpRange]:       AssetTypeIpRange,
	AssetTypeValues[AssetTypeDockerImage]:   AssetTypeDockerImage,
	AssetTypeValues[AssetTypeWebAddress]:    AssetTypeWebAddress,
	AssetTypeValues[AssetTypeGitRepository]: AssetTypeGitRepository,
	AssetTypeValues[AssetTypeGcpProject]:    AssetTypeGcpProject,
}

// Annotation represents a Annotation model.
type Annotation struct {
	Key   string
	Value string
}
