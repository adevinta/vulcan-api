// Code generated by goagen v1.4.3, DO NOT EDIT.
//
// API "Vulcan-API": global-stats Resource Client
//
// Command:
// $ main

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// MttrGlobalStatsPath computes a request path to the mttr action of global-stats.
func MttrGlobalStatsPath() string {

	return fmt.Sprintf("/api/v1/stats/mttr")
}

// Get global MTR statistics.
func (c *Client) MttrGlobalStats(ctx context.Context, path string, maxDate *string, minDate *string) (*http.Response, error) {
	req, err := c.NewMttrGlobalStatsRequest(ctx, path, maxDate, minDate)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewMttrGlobalStatsRequest create the request corresponding to the mttr action endpoint of the global-stats resource.
func (c *Client) NewMttrGlobalStatsRequest(ctx context.Context, path string, maxDate *string, minDate *string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "https"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	values := u.Query()
	if maxDate != nil {
		values.Set("maxDate", *maxDate)
	}
	if minDate != nil {
		values.Set("minDate", *minDate)
	}
	u.RawQuery = values.Encode()
	req, err := http.NewRequestWithContext(ctx, "GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	if c.BearerSigner != nil {
		if err := c.BearerSigner.Sign(req); err != nil {
			return nil, err
		}
	}
	return req, nil
}
